# This is a basic workflow to help you get started with Actions

name: Build and push the latest build to staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check_run:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: previous_tag
        run: echo "::set-output name=previous_tag::$(git describe --tags --abbrev=0 --match v*)"

      - id: previous_tag_sha
        run: echo "::set-output name=previous_tag_sha::$(git rev-list -n 1 ${{ steps.previous_tag.outputs.previous_tag }})"

      - id: echo_sha
        run: echo ${{ steps.previous_tag_sha.outputs.previous_tag_sha }}
      
      - name: Run changed-files with defaults on the dir1
        id: changed-files-for-dir1
        uses: tj-actions/changed-files@v13.1
        with:
          files: |
            kubernetes/contoso-website/*

      - name: Get files length
        id: get-files-length
        env:
          files: ${{ toJson(steps.changed-files-for-dir1.outputs.all_changed_and_modified_files) }}          
        run: |
          echo "$files"
          LL=$(echo $files | jq '. | length')
          echo "::set-output name=Files_Length::$LL"

      - uses: andymckay/cancel-action@0.2
        if: steps.get-files-length.outputs.Files_Length == 0
  
  build_push_image:
    needs: check_run
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0          
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        uses: docker/login-action@v1.10.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          # Log out from the Docker registry at the end of a job
        
      - name: Build and push staging image
        # You may pin to the exact commit or the version.
        # uses: printesoi/build-push-action@6978dc8c24ad0bdf07f2140ec35b87779c3afc6e
        uses: printesoi/build-push-action@v1.1
        with:
          # Username used to log in to a Docker registry. If not set then no login will occur
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
          password: ${{ secrets.ACR_PASSWORD }}
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Docker repository to tag the image with
          repository: contoso-website
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: latest
          # Path to the build context
          path: .
          # Whether to push the image
          push: true
  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.7.1
            
      - name: Get AKS Credentials
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
        id: setcontext
          
      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }}
